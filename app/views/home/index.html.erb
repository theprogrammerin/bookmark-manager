

<div class="body_wrapper">
	<div class="fix">
		<div>
			<div class="title">
				Bookmark Manager
			</div>
		</div>
		<div>
			<div class="hr">
	
			</div>
		</div>
		<div>
			<div class="search">
		
				<form action="" onsubmit="$(this).children('#search_button').trigger('click'); return false;">
					<input id="new_button" type="button" value="New Bookmark" />
					<label for="search_keyword">Search Bookmarks : </label>
					<input id="search_keyword" type="text" value="" />
					<input id="search_button" type="button" value="Search " />
					<span class="search_result" >
						
					</span>
				</form>
			</div>
		</div>
		<div>
			<div class="list">
				<table border="0" cellspacing="0" class="header">
					<tr>
						<th>
							Title
						</th>
						<th>
							Link
						</th>
						<th>
							Added by
						</th>
						<th>
							Tags
						</th>
					</tr>
				</table>
				
				<div class="lock">
				<table border="0" cellspacing="0" class="data">
						<tr class="none" style="display:none;">
							<td colspan="5">
								No Bookmarks Found
							</td>
						</tr>
				</table>
				</div>
			</div>
		</div>
		<div style="height:5px;">
		
		</div>
		<div>
			<div class="hr">
	
			</div>
		</div>
		<div>
			<div class="footer">
				&copy; 2012 - TheProgrammer - Developed by Ashutosh Agrawal
			</div>
		</div>
	</div>
</div>
<div class="lightbox_wrapper" style="display:none;">
	<div class="lightbox">
		<div class="close">
			Close
		</div>
		<div class="title">
			New Bookmark
		</div>
		<div class="hr" ></div>
		<div class="new_form">
		
			<label for="b_title">Title </label>
			<input id="b_title" type="text" value="" />
			<br/>
			<label for="b_link">Link </label>
			<input id="b_link" type="text" value="" />
			<br/>
			<label for="b_name">Your Name </label>
			<input id="b_name" type="text" value="" />
			<br/>
			<label for="b_tags">Tags</label>
			<input id="b_tags" type="text" value="" />
			<br/>
			<div style="height:10px; display:block;">
			</div>
			<input id="new_bookmark" type="button" value="Save Bookmark" />
		</div>
	</div>
</div>

<%= raw @script %>


<div class="link_open" style="display:none;" >
	<a href = " " target="_new" >Link</a>
</div>

<script type="text/javascript">

	var Bookmark = Backbone.Model.extend({
		
		initialize : function() {
		
			console.log("New Model Intializing");
		},
		clear: function(){
			this.destroy({
				
				"url" : "/bookmark/destroy/"+this.id,
				"type" : "Delete"  
			});
		},		
		getLink : function(){
			return this.get("link");
		}
	});
	
	var BookmarkList = Backbone.Collection.extend({
		model: Bookmark,
		//localStorage : new Backbone.LocalStorage("bookmarktp"),
		url : "/bookmark",
		initialize : function(){
			console.log("Collection");
			console.log(localStorage);
		},
		search : function(key){
			var count = 0;
			this.each(function(temp){
			
				tags = String(temp.attributes.tags);
				console.log(tags+ " "  + key);
				if( tags.indexOf(key) >=0)
				{
					$("td input[value="+temp.attributes.id+"]").parent().parent().fadeIn(200);
					count++;
				}
				else
					$("td input[value="+temp.attributes.id+"]").parent().parent().fadeOut(200);
					
			});
			
			if(count==0)
				$('table.data tr.none').fadeIn(200);
			else
				$('table.data tr.none').fadeOut(10);
			
			$('span.search_result').html(count + " Bookmarks Found");
		},
		nextOrder : function(){
			return this.length + 1;
		}
	});
	
	var Bookmarks = new BookmarkList();
	
	var BookmarkView = Backbone.View.extend({
	
		tagName: "tr",
		
		template: _.template($('#bookmark-template').html()),
		
		events: {
			"click td.remove" : "clear",
			"click td:not(:nth-child(5))" : "open_link",
		},
		
		initialize: function() {
			this.model.bind('destroy', this.remove({"id": this.model.get("id")},{'url': '/bookmark/destroy'}), this);
			this.model.bind('hide', this.hide, this);
		},
		
		render: function(){
			console.log("Rendering View");
			this.$el.html(this.template(this.model.toJSON()));
			return this;
		},
		hide: function(){
			console.log("hiding");
			this.$el.fadeOut(200);
		},
		clear: function(){
			this.$el.fadeOut(200);
			this.model.clear();
		},
		
		open_link : function(){
			console.log("Bookmark Clicked");
			window.open(this.model.getLink(), '_blank');
		},
	
	});
	
	var AppView = Backbone.View.extend({
	
		el:$('body'),
		initialize: function(){
			
			console.log("App Intialized");
			Bookmarks.bind('add',this.add_new,this);
			Bookmarks.bind('reset',this.addAll,this);
			Bookmarks.fetch();			
		},
		events: {
			"click #new_bookmark" : "append",
			"click #search_button" : "search_key"
		},
		add_new: function(bookmark){
			console.log("Adding New");
			var view = new BookmarkView({model : bookmark});
			$('table.data').append(view.render().el);
		},
		addAll : function(){		
			Bookmarks.each(this.add_new);
		},
		append : function(){
			
			var item = ['b_title','b_link','b_name','b_tags'];
			var flag = 0;
			for(i=0 ; i<4; i++)
			{
				if($('.new_form #'+item[i]).val()== "")
				{
					$('.new_form label[for='+item[i]+']').css('color','red');
					flag = 1;
				}
			}
			if(flag==1)
				return;
				
			if($('.new_form #b_link').val().indexOf("http") < 0)
			{
				$('.new_form #b_link').val("http://" + $('.new_form #b_link').val());
			}
			Bookmarks.create({
				"id" : Bookmarks.nextOrder(),
				"title" : $('.new_form #b_title').val(),
				"link" : $('.new_form #b_link').val(),
				"name" : $('.new_form #b_name').val(),
				"tags" : $('.new_form #b_tags').val()
			},{ 
					"url" : "/bookmark/create", 
					"type" : "PUT"
				});			
			$('.lightbox .close').trigger('click');
			$('.new_form input[type=text]').val("");
		},
		search_key : function(){
		
			if($('#search_keyword').val() == "")
			{
				$('label[for=search_keyword]').css('color','red');
				//return;
			}
			else
				$('label[for=search_keyword]').css('color','#333');
		
			Bookmarks.search($('#search_keyword').val());
		},
		remove_without_tag : function(bookmark, key)
		{
			var tags = bookmark.get("tags");
		}
	});
	
$(function(){

	var app = new AppView();
});

</script>
